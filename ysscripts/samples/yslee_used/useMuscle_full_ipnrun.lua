package.path=package.path..";../Samples/ysscripts/lib/?.lua" --;"..package.path
require("utilfunc")

package.path=package.path..";../Samples/ysscripts/samples/?.lua" --;"..package.path
require("useMuscle_full_same")


useCases.full_ipnrun=deepCopyTable(useCases.full_same)

useCases.full_ipnrun.optimizerMethod='Optimizer.methods.CMAes_ys'

useCases.full_ipnrun.endSegW=15
useCases.full_ipnrun.prec=.2

useCases.full_ipnrun.modelName='full_ipnrun'
useCases.full_ipnrun.grpName='full_ipnrun'
useCases.full_ipnrun.grpNames={'full_ipnrun'}

-- the initial pendControlParam and pendOptimizationPath can be automatically generated by using createInitialPendControlParam.lua
useCases.full_ipnrun.pendControlParam=
{
['keyframe,0,pendDesiredVel,full_ipnrun,l,z']=0,['keyframe,0,pendDesiredVel,full_ipnrun,l,x']=1,['keyframe,0,pendDesiredVel,full_ipnrun,r,z']=0,['keyframe,0,pendDesiredVel,full_ipnrun,r,x']=1,['keyframe,0,pendDesiredVel,full_ipnrun,L1,z']=0,['keyframe,0,pendDesiredVel,full_ipnrun,L1,x']=1,['keyframe,0,pendDesiredVel,full_ipnrun,R1,z']=0,['keyframe,0,pendDesiredVel,full_ipnrun,R1,x']=1,['keyframe,0,pendDesiredVel,full_ipnrun,L2,z']=0,['keyframe,0,pendDesiredVel,full_ipnrun,L2,x']=1,['keyframe,0,pendDesiredVel,ignore,0,z']=0,['keyframe,0,pendDesiredVel,ignore,0,x']=1,['keyframe,0,pendDesiredVel,ignore,1,z']=0,['keyframe,0,pendDesiredVel,ignore,1,x']=1,
['keyframe,0,pendDesiredVel,ignore,0,x']=-0.17735172913339, ['keyframe,0,pendDesiredVel,ignore,0,z']=-0.33965287312438, ['keyframe,0,pendDesiredVel,full_ipnrun,l,x']=-0.11175535491193, ['keyframe,0,pendDesiredVel,full_ipnrun,l,z']=-0.20509580349014, ['keyframe,0,pendDesiredVel,full_ipnrun,r,x']=-0.045611959285589, ['keyframe,0,pendDesiredVel,full_ipnrun,r,z']=-0.064245770504627, ['keyframe,0,pendDesiredVel,full_ipnrun,L1,x']=-0.023844434226709, ['keyframe,0,pendDesiredVel,full_ipnrun,L1,z']=0.011162735538263, ['keyframe,0,pendDesiredVel,full_ipnrun,R1,x']=-0.0056331521215652, ['keyframe,0,pendDesiredVel,full_ipnrun,R1,z']=0.026891966591253, ['keyframe,0,pendDesiredVel,full_ipnrun,L2,x']=-0.00010924919732216, ['keyframe,0,pendDesiredVel,full_ipnrun,L2,z']=0.018318335426283, ['keyframe,0,pendDesiredVel,ignore,1,x']=0.013336381211348, ['keyframe,0,pendDesiredVel,ignore,1,z']=-0.0029906216517521, 
['keyframe,0,pendDesiredVel,ignore,0,x']=-0.17824080838936, ['keyframe,0,pendDesiredVel,ignore,0,z']=-0.3410809987529, ['keyframe,0,pendDesiredVel,full_ipnrun,l,x']=-0.11309968190758, ['keyframe,0,pendDesiredVel,full_ipnrun,l,z']=-0.20232834162019, ['keyframe,0,pendDesiredVel,full_ipnrun,r,x']=-0.045167096820206, ['keyframe,0,pendDesiredVel,full_ipnrun,r,z']=-0.066667016742514, ['keyframe,0,pendDesiredVel,full_ipnrun,L1,x']=-0.024279685963021, ['keyframe,0,pendDesiredVel,full_ipnrun,L1,z']=0.012917961706282, ['keyframe,0,pendDesiredVel,full_ipnrun,R1,x']=-0.0057723312734285, ['keyframe,0,pendDesiredVel,full_ipnrun,R1,z']=0.026046475207172, ['keyframe,0,pendDesiredVel,full_ipnrun,L2,x']=-0.0014349880582403, ['keyframe,0,pendDesiredVel,full_ipnrun,L2,z']=0.016707604628142, ['keyframe,0,pendDesiredVel,ignore,1,x']=0.010394389636722, ['keyframe,0,pendDesiredVel,ignore,1,z']=-0.0015035794840436, 
['keyframe,0,pendDesiredVel,ignore,0,x']=-0.397279179851, ['keyframe,0,pendDesiredVel,ignore,0,z']=-0.82274789081989, ['keyframe,0,pendDesiredVel,full_ipnrun,l,x']=-0.1910192298709, ['keyframe,0,pendDesiredVel,full_ipnrun,l,z']=0.38718433951502, ['keyframe,0,pendDesiredVel,full_ipnrun,r,x']=0.14860475551525, ['keyframe,0,pendDesiredVel,full_ipnrun,r,z']=-0.080572405587164, ['keyframe,0,pendDesiredVel,full_ipnrun,L1,x']=-0.1010276534494, ['keyframe,0,pendDesiredVel,full_ipnrun,L1,z']=0.037894027131615, ['keyframe,0,pendDesiredVel,full_ipnrun,R1,x']=-0.05500537391832, ['keyframe,0,pendDesiredVel,full_ipnrun,R1,z']=-0.12241845390729, ['keyframe,0,pendDesiredVel,full_ipnrun,L2,x']=-0.038050607607384, ['keyframe,0,pendDesiredVel,full_ipnrun,L2,z']=0.080346028657179, ['keyframe,0,pendDesiredVel,ignore,1,x']=0.012218459579621, ['keyframe,0,pendDesiredVel,ignore,1,z']=0.0037180977593758, 
['keyframe,0,pendDesiredVel,ignore,0,x']=-0.3975079693686, ['keyframe,0,pendDesiredVel,ignore,0,z']=-0.82277135460157, ['keyframe,0,pendDesiredVel,full_ipnrun,l,x']=-0.19122548038973, ['keyframe,0,pendDesiredVel,full_ipnrun,l,z']=0.38723548696006, ['keyframe,0,pendDesiredVel,full_ipnrun,r,x']=0.14848274796588, ['keyframe,0,pendDesiredVel,full_ipnrun,r,z']=-0.080591733721695, ['keyframe,0,pendDesiredVel,full_ipnrun,L1,x']=-0.10114077401849, ['keyframe,0,pendDesiredVel,full_ipnrun,L1,z']=0.037933473140123, ['keyframe,0,pendDesiredVel,full_ipnrun,R1,x']=-0.055021577194304, ['keyframe,0,pendDesiredVel,full_ipnrun,R1,z']=-0.12237803749991, ['keyframe,0,pendDesiredVel,full_ipnrun,L2,x']=-0.038066635269741, ['keyframe,0,pendDesiredVel,full_ipnrun,L2,z']=0.080395541180602, ['keyframe,0,pendDesiredVel,ignore,1,x']=0.012219208654909, ['keyframe,0,pendDesiredVel,ignore,1,z']=0.0037199071894178, 
}
useCases.full_ipnrun.pendOptimizationPath=
{
	firstFrames={1*4,14*4,27*4,40*4,53*4,66*4,79*4,90*4},
	segments={'ignore,0','full_ipnrun,l','full_ipnrun,r','full_ipnrun,L1','full_ipnrun,R1','full_ipnrun,L2','ignore,1'},
}
--useCases.full_ipnrun.measureOptCost=useCases.measureOptCost

useCases.full_ipnrun.segmentations=
{
	full_ipnrun={
		firstFrames={1*4,14*4,27*4,40*4,53*4,66*4,79*4,90*4},
		--        (blank)    L    R     L     R     L     (blank)
		names={             'l', 'r', 'L1', 'R1', 'L2',  },
		swingL={             0,   1,   0,    1,    0,    },
		swingR={             1,   0,   1,    0,    1,    },
		footRefL= "convertFromSwingL",
		footRefR= "convertFromSwingR",
		usePositionControl=false,
	},
}
useCases.full_ipnrun.graphParam=
{
	full_ipnrun={
		seg={            'l',  'r',  'L1', 'R1','L'},
		num_key={         3,    3,    3  ,  4,  4},
		key_first={       0,    0,    0  ,  0,  0},
		key_last={       'r', 'L1',  'R1', 'L', 'R1'},
	},
}
useCases.full_ipnrun.graph=
{
	{
		"addInterpolatedSegment",
		grpName="full_ipnrun",
		name="L",
		seg0={"full_ipnrun", "L2"},
		seg1={"full_ipnrun", "L1"},
		startWeight=0, endWeight=1
	},
	{"connectMulti", "full_ipnrun", "l", "r", "L1", "R1", "L", "R1"},
	--{"initialSegment", "full_ipnrun", "l"}
	{"initialSegment", "full_ipnrun", "R1"}
}
useCases.full_ipnrun.segNames=
{
	"l", "r", "L1", 'R1','L',
}

do 
	useCases.full_ipnrun.controlParam={
		['useCases,full_ipnrun,COMobjWeight']=0, 
		['useCases,full_ipnrun,conservativeW']=1, 
		--['useCases,full_ipnrun,contactMargin']=0.01, 
		['useCases,full_ipnrun,dotMomentumScale']=0.3, 
		['useCases,full_ipnrun,excludeRoot']=true, 
		['useCases,full_ipnrun,headControlWeight']=0, 
		['useCases,full_ipnrun,k_d_HEAD']=14, 
		['useCases,full_ipnrun,k_p_HEAD']=0, 
		['useCases,full_ipnrun,k_d_EE']=24, 
		['useCases,full_ipnrun,k_d_momentum']=10, 
		['useCases,full_ipnrun,k_p_EE']=120, 

		--['useCases,full_ipnrun,maxPenetratingVel']=0, 
		['useCases,full_ipnrun,momentumThr']=50, 
		['useCases,full_ipnrun,noComvelDependentFootAdjustment']=true, 
		['useCases,full_ipnrun,noIntersectionPrevenction']=true, 
		['useCases,full_ipnrun,numericalDerivDmot']=true, 
		['useCases,full_ipnrun,perClassContactMargin']=1, 
		['useCases,full_ipnrun,turnGain']=10, 
		['useCases,full_ipnrun,velMarginOffset']=0, 

		['useCases,full_ipnrun,actuationType']      = useCases.full_ipnrun.actuationType,
		['useCases,full_ipnrun,k_p_ID']             = useCases.full_ipnrun.k_p_ID,
		['useCases,full_ipnrun,k_d_ID']             = useCases.full_ipnrun.k_d_ID,
		['useCases,full_ipnrun,ddqObjWeight']       = useCases.full_ipnrun.ddqObjWeight,
		['useCases,full_ipnrun,tauObjWeight']       = useCases.full_ipnrun.tauObjWeight,
		['useCases,full_ipnrun,ftObjWeight']        = useCases.full_ipnrun.ftObjWeight,
		['useCases,full_ipnrun,aObjWeight']         = useCases.full_ipnrun.aObjWeight,
		['useCases,full_ipnrun,lambdaObjWeight']    = useCases.full_ipnrun.lambdaObjWeight,
		['useCases,full_ipnrun,EEobjWeight']        = useCases.full_ipnrun.EEobjWeight,
		['useCases,full_ipnrun,EEobjWeightAngular'] = useCases.full_ipnrun.EEobjWeightAngular,
		['useCases,full_ipnrun,momentumWeight']     = useCases.full_ipnrun.momentumWeight,
		['useCases,full_ipnrun,tauMax']             = useCases.full_ipnrun.tauMax,
		['useCases,full_ipnrun,ftMax']              = useCases.full_ipnrun.ftMax,
	}

	local function accumulate(cp_mod)
		local useCase=useCases.full_ipnrun
		useCases.accumulate(useCase, cp_mod)
	end

-------------------------------------------------
if g_mode=='default' then
	--iter:269 bestfvever:0.00014782099553334
	faccumulate({['map,0,swingFootMod,full_ipnrun,x']= -0.045072203069238, ['map,0,swingFootMod,full_ipnrun,y']= 0.03470734032128, ['map,0,swingFootMod,full_ipnrun,z']= 0.32611320726425, ['map,1,swingFootMod,full_ipnrun,x']= -0.067752004203496, ['map,1,swingFootMod,full_ipnrun,y']= 0.11831892206206, ['map,1,swingFootMod,full_ipnrun,z']= 0.022381063715933, ['map,2,swingFootMod,full_ipnrun,x']= 0.20946938681031, ['map,2,swingFootMod,full_ipnrun,y']= -0.10594841454577, ['map,2,swingFootMod,full_ipnrun,z']= -0.01383110274976, ['map,0,spprtFootMod,full_ipnrun,x']= -0.091659053907436, ['map,0,spprtFootMod,full_ipnrun,y']= -0.017287336482488, ['map,0,spprtFootMod,full_ipnrun,z']= -0.27552268015658, ['map,1,spprtFootMod,full_ipnrun,x']= 0.097731523599122, ['map,1,spprtFootMod,full_ipnrun,y']= -0.0039849385486411, ['map,1,spprtFootMod,full_ipnrun,z']= 0.33336128713999, ['map,2,spprtFootMod,full_ipnrun,x']= 0.16993898385694, ['map,2,spprtFootMod,full_ipnrun,y']= -0.43768996666874, ['map,2,spprtFootMod,full_ipnrun,z']= 0.33209671146604, })

elseif g_mode=='a_.1' then
	useCases.full_ipnrun.aObjWeight = .1*useCases.full_ipnrun.aObjWeight

elseif g_mode=='a_.01' then
	useCases.full_ipnrun.aObjWeight = .01*useCases.full_ipnrun.aObjWeight

	--iter:147 bestfvever:2.9468872845068e-06
	accumulate({['map,0,swingFootMod,full_ipnrun,x']= 0.262665627781, ['map,0,swingFootMod,full_ipnrun,y']= -0.083492894946918, ['map,0,swingFootMod,full_ipnrun,z']= 0.20489060175442, ['map,1,swingFootMod,full_ipnrun,x']= 0.12491492338101, ['map,1,swingFootMod,full_ipnrun,y']= -0.69745766184507, ['map,1,swingFootMod,full_ipnrun,z']= -0.18101782270022, ['map,2,swingFootMod,full_ipnrun,x']= -0.11438690630832, ['map,2,swingFootMod,full_ipnrun,y']= -0.36838705488704, ['map,2,swingFootMod,full_ipnrun,z']= 0.28777909045652, ['map,0,spprtFootMod,full_ipnrun,x']= 0.83264749676606, ['map,0,spprtFootMod,full_ipnrun,y']= 0.0019022031479486, ['map,0,spprtFootMod,full_ipnrun,z']= 0.28141554777149, ['map,1,spprtFootMod,full_ipnrun,x']= 0.038021203014769, ['map,1,spprtFootMod,full_ipnrun,y']= -0.48263638537778, ['map,1,spprtFootMod,full_ipnrun,z']= -0.016044698275961, ['map,2,spprtFootMod,full_ipnrun,x']= 0.17314632397877, ['map,2,spprtFootMod,full_ipnrun,y']= -0.10852491095158, ['map,2,spprtFootMod,full_ipnrun,z']= -0.29191607647309, })

elseif g_mode=='a_.01_mscl_2x' then
	useCases.full_ipnrun.aObjWeight = .01*useCases.full_ipnrun.aObjWeight
	useCases.full_ipnrun.initMsclForceScale=2

	--iter:141 bestfvever:2.5885479390116e-06
	accumulate({['map,0,swingFootMod,full_ipnrun,x']= 0.48872486674982, ['map,0,swingFootMod,full_ipnrun,y']= -0.14759293936548, ['map,0,swingFootMod,full_ipnrun,z']= 0.28987802132994, ['map,1,swingFootMod,full_ipnrun,x']= -0.0034395354421354, ['map,1,swingFootMod,full_ipnrun,y']= -0.791419331578, ['map,1,swingFootMod,full_ipnrun,z']= -0.082146605706931, ['map,2,swingFootMod,full_ipnrun,x']= -0.0039236353914695, ['map,2,swingFootMod,full_ipnrun,y']= -0.4907157117196, ['map,2,swingFootMod,full_ipnrun,z']= 0.094945667539554, ['map,0,spprtFootMod,full_ipnrun,x']= 0.87200342767687, ['map,0,spprtFootMod,full_ipnrun,y']= 0.014460146385023, ['map,0,spprtFootMod,full_ipnrun,z']= 0.37397151198904, ['map,1,spprtFootMod,full_ipnrun,x']= -0.080609476201146, ['map,1,spprtFootMod,full_ipnrun,y']= -0.4384017797673, ['map,1,spprtFootMod,full_ipnrun,z']= 0.070093537208149, ['map,2,spprtFootMod,full_ipnrun,x']= 0.061560019701175, ['map,2,spprtFootMod,full_ipnrun,y']= -0.18579947799936, ['map,2,spprtFootMod,full_ipnrun,z']= -0.36352437806712, })

end
-------------------------------------------------

useCases.full_ipnrun.controlParam['useCases,full_ipnrun,aObjWeight'] = useCases.full_ipnrun.aObjWeight

useCases.unmapControlParam(useCases.full_ipnrun)
end


