local function makeOptParam(numKey,...)
	local gtarget=array:new()
	local prec=0.01
	for iid,id in ipairs({...}) do
		for i=0, numKey-1 do
			if string.sub(id,1,3)=="MAP" then
				gtarget:pushBack({"map,"..i..","..string.sub(id,4)..",x",prec})
				gtarget:pushBack({"map,"..i..","..string.sub(id,4)..",y",prec})
				gtarget:pushBack({"map,"..i..","..string.sub(id,4)..",z",prec})
			else
				gtarget:pushBack({"keyframe,"..i..","..id..",x",prec})
				gtarget:pushBack({"keyframe,"..i..","..id..",y",prec})
				gtarget:pushBack({"keyframe,"..i..","..id..",z",prec})
			end
		end
	end
	return gtarget
end
local function makeOptParamAxis(numKey,axis,...)
	local gtarget=array:new()
	local prec=0.01
	local symmetricMapUsed=false
	for iid,id in ipairs({...}) do
		for i=0, numKey-1 do
			if string.sub(id,1,3)=="MAP" then
				gtarget:pushBack({"map,"..i..","..string.sub(id,4)..","..axis,prec})
				--symmetricMapUsed=true
			else
				gtarget:pushBack({"keyframe,"..i..","..id..","..axis,prec})
			end
		end
	end

	return gtarget
end

useCases.turn={
	scenario=scenarios.ETC, 
	modelName='woody',
	useAnalyticIK=true, 
	grpName='turn',
	grpNames={'turn'},
	useFootEncodingMethod2=
	{
		true,
		geom={
			L={ 
				{"LeftFoot", vector3(0,-0.03,0.02)},
				{"LeftToes", vector3(0,-0.03,0.02)},
			},
			R={
				{"RightFoot", vector3(0,-0.03,0.02)},
				{"RightToes", vector3(0,-0.03,0.02)},
			},
		}
	},
	lfootpos=vector3(0,-0.03,0.09),
	rfootpos=vector3(0,-0.03,0.09),
	useQPsolver=true,
	footPosFeedbackMethod=2,
	useMomentumPreservingIK=false,
	mot_file=package.resourcePath.."woody/woody.dof",
	mot_file_upsample=4,
	desiredPos=vector3(0,0,0),
	-- [[[[  이 괄호 사이 부분은 맨 처음에는 필요없음
	--measureOptCost=useCases.measureOptCost,
	-- the initial pendControlParam and pendOptimizationPath can be automatically generated by using createInitialPendControlParam.lua
	pendControlParam={
		-- set measureOptCost
		-- initial 
		['keyframe,0,pendDesiredVel,turn,stand,z']=0,['keyframe,0,pendDesiredVel,turn,stand,x']=0,['keyframe,0,pendDesiredVel,turn,r,z']=0,['keyframe,0,pendDesiredVel,turn,r,x']=0,['keyframe,0,pendDesiredVel,turn,rl,z']=0,['keyframe,0,pendDesiredVel,turn,rl,x']=0,['keyframe,0,pendDesiredVel,turn,l1,z']=0,['keyframe,0,pendDesiredVel,turn,l1,x']=0,['keyframe,0,pendDesiredVel,turn,R1,z']=0,['keyframe,0,pendDesiredVel,turn,R1,x']=0,['keyframe,0,pendDesiredVel,turn,L,z']=0,['keyframe,0,pendDesiredVel,turn,L,x']=0,['keyframe,0,pendDesiredVel,turn,R2,z']=0,['keyframe,0,pendDesiredVel,turn,R2,x']=0,['keyframe,0,pendDesiredVel,turn,L2,z']=0,['keyframe,0,pendDesiredVel,turn,L2,x']=0,['keyframe,0,pendDesiredVel,turn,R3,z']=0,['keyframe,0,pendDesiredVel,turn,R3,x']=0,['keyframe,0,pendDesiredVel,ignore,0,z']=0,['keyframe,0,pendDesiredVel,ignore,0,x']=0,['keyframe,0,pendDesiredVel,ignore,1,z']=0,['keyframe,0,pendDesiredVel,ignore,1,x']=0,
		-- version 1
		['keyframe,0,pendDesiredVel,ignore,0,x']= 0.22154095899262, ['keyframe,0,pendDesiredVel,ignore,0,z']= 0.12374745900388, ['keyframe,0,pendDesiredVel,turn,stand,x']= 0.081896894230442, ['keyframe,0,pendDesiredVel,turn,stand,z']= 0.45867652019114, ['keyframe,0,pendDesiredVel,turn,r,x']= -0.18919981011582, ['keyframe,0,pendDesiredVel,turn,r,z']= 0.86954784863563, ['keyframe,0,pendDesiredVel,turn,rl,x']= -0.63054803502385, ['keyframe,0,pendDesiredVel,turn,rl,z']= 1.2123317122603, ['keyframe,0,pendDesiredVel,turn,l1,x']= -1.0946197823256, ['keyframe,0,pendDesiredVel,turn,l1,z']= 1.4672241425229, ['keyframe,0,pendDesiredVel,turn,R1,x']= -1.3838896131346, ['keyframe,0,pendDesiredVel,turn,R1,z']= 1.3385965037194, ['keyframe,0,pendDesiredVel,turn,L,x']= -0.37602673967732, ['keyframe,0,pendDesiredVel,turn,L,z']= 1.7483617822658, ['keyframe,0,pendDesiredVel,turn,R2,x']= -1.0303636068848, ['keyframe,0,pendDesiredVel,turn,R2,z']= 2.0915496597027, ['keyframe,0,pendDesiredVel,turn,L2,x']= -0.17782375147038, ['keyframe,0,pendDesiredVel,turn,L2,z']= 1.9087868681886, ['keyframe,0,pendDesiredVel,turn,R3,x']= -0.3194872566732, ['keyframe,0,pendDesiredVel,turn,R3,z']= 2.1005094300003, ['keyframe,0,pendDesiredVel,ignore,1,x']= -0.34056005585347, ['keyframe,0,pendDesiredVel,ignore,1,z']= 2.0369144090182, 
		-- after unseting measureOptCost
		['keyframe,0,pendDesiredVel,ignore,0,x']= -0.024147834489552, ['keyframe,0,pendDesiredVel,ignore,0,z']= 0.088058220724029, ['keyframe,0,pendDesiredVel,turn,stand,x']= 0.47702586798009, ['keyframe,0,pendDesiredVel,turn,stand,z']= 0.21738634149488, ['keyframe,0,pendDesiredVel,turn,r,x']= 0.082454494440415, ['keyframe,0,pendDesiredVel,turn,r,z']= 0.76256946171197, ['keyframe,0,pendDesiredVel,turn,rl,x']= -0.41628601520352, ['keyframe,0,pendDesiredVel,turn,rl,z']= 1.117483700001, ['keyframe,0,pendDesiredVel,turn,l1,x']= -0.88662253297003, ['keyframe,0,pendDesiredVel,turn,l1,z']= 1.0585948463187, ['keyframe,0,pendDesiredVel,turn,R1,x']= -1.6152592263785, ['keyframe,0,pendDesiredVel,turn,R1,z']= 0.8180735117367, ['keyframe,0,pendDesiredVel,turn,L,x']= -0.0092576995765089, ['keyframe,0,pendDesiredVel,turn,L,z']= 1.6213782087026, ['keyframe,0,pendDesiredVel,turn,R2,x']= -1.5542000709724, ['keyframe,0,pendDesiredVel,turn,R2,z']= 1.9723273437593, ['keyframe,0,pendDesiredVel,turn,L2,x']= -0.063231874702499, ['keyframe,0,pendDesiredVel,turn,L2,z']= 1.4480427841615, ['keyframe,0,pendDesiredVel,turn,R3,x']= -0.12838593211115, ['keyframe,0,pendDesiredVel,turn,R3,z']= 1.94867402162, ['keyframe,0,pendDesiredVel,ignore,1,x']= -0.36235906036003, ['keyframe,0,pendDesiredVel,ignore,1,z']= 2.0345378423826, 
		-- run driverExtract ... as many times as possible until perfect converge
		['keyframe,0,pendDesiredVel,ignore,0,x']= -0.23121949769732, ['keyframe,0,pendDesiredVel,ignore,0,z']= 0.084247096936577, ['keyframe,0,pendDesiredVel,turn,stand,x']= 0.73154161677205, ['keyframe,0,pendDesiredVel,turn,stand,z']= 0.31793001592609, ['keyframe,0,pendDesiredVel,turn,r,x']= 0.42003639769944, ['keyframe,0,pendDesiredVel,turn,r,z']= 0.83411577489725, ['keyframe,0,pendDesiredVel,turn,rl,x']= -0.15815209233177, ['keyframe,0,pendDesiredVel,turn,rl,z']= 1.1356657426567, ['keyframe,0,pendDesiredVel,turn,l1,x']= -0.77155651361355, ['keyframe,0,pendDesiredVel,turn,l1,z']= 0.55103204387484, ['keyframe,0,pendDesiredVel,turn,R1,x']= -1.9260316729118, ['keyframe,0,pendDesiredVel,turn,R1,z']= 0.92282643547311, ['keyframe,0,pendDesiredVel,turn,L,x']= -0.22364959662651, ['keyframe,0,pendDesiredVel,turn,L,z']= 0.9044024634778, ['keyframe,0,pendDesiredVel,turn,R2,x']= -1.858956086035, ['keyframe,0,pendDesiredVel,turn,R2,z']= 0.9006203673195, ['keyframe,0,pendDesiredVel,turn,L2,x']= -0.02485055740681, ['keyframe,0,pendDesiredVel,turn,L2,z']= 0.97943601734244, ['keyframe,0,pendDesiredVel,turn,R3,x']= -0.085671478975374, ['keyframe,0,pendDesiredVel,turn,R3,z']= 1.5576173478345, ['keyframe,0,pendDesiredVel,ignore,1,x']= -0.36490782915166, ['keyframe,0,pendDesiredVel,ignore,1,z']= 2.0324766664308, 
		['keyframe,0,pendDesiredVel,ignore,0,x']= -0.14616796369022, ['keyframe,0,pendDesiredVel,ignore,0,z']= 0.070939809591596, ['keyframe,0,pendDesiredVel,turn,stand,x']= 0.66073951245086, ['keyframe,0,pendDesiredVel,turn,stand,z']= 0.35159310919931, ['keyframe,0,pendDesiredVel,turn,r,x']= 0.39203876740031, ['keyframe,0,pendDesiredVel,turn,r,z']= 0.8640905254407, ['keyframe,0,pendDesiredVel,turn,rl,x']= -0.1975560223201, ['keyframe,0,pendDesiredVel,turn,rl,z']= 1.1494494168222, ['keyframe,0,pendDesiredVel,turn,l1,x']= -1.0064803800847, ['keyframe,0,pendDesiredVel,turn,l1,z']= 0.45919369130463, ['keyframe,0,pendDesiredVel,turn,R1,x']= -1.959754239147, ['keyframe,0,pendDesiredVel,turn,R1,z']= 0.91560857383856, ['keyframe,0,pendDesiredVel,turn,L,x']= -0.18225653086217, ['keyframe,0,pendDesiredVel,turn,L,z']= 0.88133961991468, ['keyframe,0,pendDesiredVel,turn,R2,x']= -1.8921874785144, ['keyframe,0,pendDesiredVel,turn,R2,z']= 0.9535517039276, ['keyframe,0,pendDesiredVel,turn,L2,x']= -0.0068408088095299, ['keyframe,0,pendDesiredVel,turn,L2,z']= 0.71798984286394, ['keyframe,0,pendDesiredVel,turn,R3,x']= -0.026602632717303, ['keyframe,0,pendDesiredVel,turn,R3,z']= 1.5864716456483, ['keyframe,0,pendDesiredVel,ignore,1,x']= -0.36502766516045, ['keyframe,0,pendDesiredVel,ignore,1,z']= 2.0233018545127, 
		['keyframe,0,pendDesiredVel,ignore,0,x']= -0.13605228258474, ['keyframe,0,pendDesiredVel,ignore,0,z']= 0.03703005396104, ['keyframe,0,pendDesiredVel,turn,stand,x']= 0.65741541644869, ['keyframe,0,pendDesiredVel,turn,stand,z']= 0.35866445825076, ['keyframe,0,pendDesiredVel,turn,r,x']= 0.42063449382855, ['keyframe,0,pendDesiredVel,turn,r,z']= 0.88667655728368, ['keyframe,0,pendDesiredVel,turn,rl,x']= -0.18183055539947, ['keyframe,0,pendDesiredVel,turn,rl,z']= 1.1643452984976, ['keyframe,0,pendDesiredVel,turn,l1,x']= -1.0957891586835, ['keyframe,0,pendDesiredVel,turn,l1,z']= 0.39472750944181, ['keyframe,0,pendDesiredVel,turn,R1,x']= -1.0103870244407, ['keyframe,0,pendDesiredVel,turn,R1,z']= 0.61133539999822, ['keyframe,0,pendDesiredVel,turn,L,x']= -0.97775637155715, ['keyframe,0,pendDesiredVel,turn,L,z']= 0.87543103961231, ['keyframe,0,pendDesiredVel,turn,R2,x']= -1.0520696571352, ['keyframe,0,pendDesiredVel,turn,R2,z']= 0.95604422959571, ['keyframe,0,pendDesiredVel,turn,L2,x']= 0.014232952444131, ['keyframe,0,pendDesiredVel,turn,L2,z']= 0.6356003784466, ['keyframe,0,pendDesiredVel,turn,R3,x']= -0.058026345241046, ['keyframe,0,pendDesiredVel,turn,R3,z']= 1.5409017312702, ['keyframe,0,pendDesiredVel,ignore,1,x']= -0.3597000105511, ['keyframe,0,pendDesiredVel,ignore,1,z']= 2.0213963310874, 
		['keyframe,0,pendDesiredVel,ignore,0,x']= -0.18578335275737, ['keyframe,0,pendDesiredVel,ignore,0,z']= 0.0058224316262488, ['keyframe,0,pendDesiredVel,turn,stand,x']= 0.69335441735726, ['keyframe,0,pendDesiredVel,turn,stand,z']= 0.36841991936563, ['keyframe,0,pendDesiredVel,turn,r,x']= 0.52603858729147, ['keyframe,0,pendDesiredVel,turn,r,z']= 0.94343878201881, ['keyframe,0,pendDesiredVel,turn,rl,x']= -0.090907786794304, ['keyframe,0,pendDesiredVel,turn,rl,z']= 1.2317235825874, ['keyframe,0,pendDesiredVel,turn,l1,x']= -1.0429640546855, ['keyframe,0,pendDesiredVel,turn,l1,z']= 0.58665304262518, ['keyframe,0,pendDesiredVel,turn,R1,x']= -1.8172046006695, ['keyframe,0,pendDesiredVel,turn,R1,z']= 0.3804760535131, ['keyframe,0,pendDesiredVel,turn,L,x']= -0.15268786639546, ['keyframe,0,pendDesiredVel,turn,L,z']= 0.78415311242481, ['keyframe,0,pendDesiredVel,turn,R2,x']= -1.7446021822076, ['keyframe,0,pendDesiredVel,turn,R2,z']= 1.0286682030914, ['keyframe,0,pendDesiredVel,turn,L2,x']= 0.25312513939494, ['keyframe,0,pendDesiredVel,turn,L2,z']= 0.62282672492172, ['keyframe,0,pendDesiredVel,turn,R3,x']= -0.16524259289654, ['keyframe,0,pendDesiredVel,turn,R3,z']= 1.448978296583, ['keyframe,0,pendDesiredVel,ignore,1,x']= -0.35169721982963, ['keyframe,0,pendDesiredVel,ignore,1,z']= 2.0212661219972, 
	},
	pendOptimizationPath=
	{
		firstFrames={4,80,148,172,192,248,320,392,460,528,596,672,},
		segments={'ignore,0','turn,stand','turn,r','turn,rl','turn,l1','turn,R1','turn,L','turn,R2','turn,L2','turn,R3','ignore,1'},
	},
	-- ]]]]
	conservativePrediction=1.0,
	muscleActiveness=0.8,
	keyframes={
		pendDesiredVel={numKey=1, default=vector3(0,0,0)},
		swingFootForce={numKey=3, default=vector3(0,10,0)},
		footLmod={numKey=3, numKeyFrom='key', default=vector3(0,0,0)},
		footRmod={numKey=3, numKeyFrom='key', default=vector3(0,0,0)},
		footLmocapMod={numKey=3, numKeyFrom='key', default=vector3(0,0,0)},
		footRmocapMod={numKey=3, numKeyFrom='key', default=vector3(0,0,0)},
		desiredHeadAcc={numKey=3, numKeyFrom='key', default=vector3(0,0,0)},
		desiredMomentum={numKey=3, numKeyFrom='key', default=vector3(0,0,0)},
		desiredDotMomentum={numKey=3, numKeyFrom='key', isContinuous=false,default=vector3(0,0,0)},
		desiredLeaning={numKey=1, isContinuous=false,default=vector3(0,0,0)},
		spprtImpL={numKey=2, default=1},
		spprtImpR={numKey=2, default=1},
		mocapCompensationCoef={numKey=1, default=vector3(1, 1.0, 1)},
	},
	segProperties={
		noCOPcontrol={default=false}
	},
}

useCases.turn.attachCamera=true

function useCases.turn:updateStageParam(stage, stageParam)
	gains={}
	local endSegW=25
	local grpName='turn'
	local genOpt=function(starts, ends, ps, pe, name, axis, others)
		local out=useCases.genOpt(useCase, starts, ends, ps, pe, name, axis,others, grpName, path)
		assert(out)
		return out
	end
	local tgt_all={'footLmod','footRmod'}
	local tgt_L={'footLmod', }
	local tgt_R={'footRmod', }
	if false and stage<11 then -- before starting to walk
		local tbl={ 
			{2,2, {'footLmod', 'footRmod'}}, 
			{1,1, {'footLmod', 'footRmod'}},
			{2,2, {'footLmod', 'footRmod'}},
			{4,4, {'footLmod', 'footRmod'}}, 
			{2,4, {'footLmod'}}, 
			{2,4, {'footRmod'}}, 
			{2,2, {'footLmod', 'footRmod'}},
			{4,4, {'footLmod', 'footRmod'}},
			{2,4, {'footLmod'}},
			{2,4, {'footRmod'}},
		}

		local tb=tbl[stage]
		local endSegW=7
		stageParam[stage]=genOpt( 1, endSegW, tb[1], tb[2],grpName, nil, tb[3])
	elseif false then
		-- doesn't assume symmetry
		local mod=math.mod(stage-1,4)
		if mod==0 then -- footall
			stageParam[stage]=genOpt( 8, endSegW, 6, 8,grpName, nil, {'footLmod_all','footRmod_all'})
		elseif mod==1 then
			stageParam[stage]=genOpt( 8, endSegW, 6, 8,grpName,{'x','y'})
		elseif mod==2 then
			stageParam[stage]=genOpt( 8, endSegW, 6, 8,grpName,{'x','z'})
		else
			stageParam[stage]=genOpt( 8, endSegW, 6, 8,grpName,{'y','z'})
		end
	else  -- optimize walk cycles (assuming symmetry)
		--local endSegW=stage+23
		local mod=math.mod(stage-1,4)
		if mod==0 then
			stageParam[stage]={startSeg=1, endSeg=endSegW, nvar=2,setStageFunc="setStage_param", param=makeOptParam(3,"MAPswingFootMod,"..grpName,"MAPspprtFootMod,"..grpName), objCost=objCost,baseStage=1}
		elseif mod==1 then
			stageParam[stage]={startSeg=1, endSeg=endSegW, nvar=2,setStageFunc="setStage_param", param=makeOptParamAxis(3,'z',"MAPswingFootMod,"..grpName,"MAPspprtFootMod,"..grpName), objCost=objCost,baseStage=1}
		elseif mod==2 then
			stageParam[stage]={startSeg=1, endSeg=endSegW, nvar=2,setStageFunc="setStage_param", param=makeOptParamAxis(3,'x',"MAPswingFootMod,"..grpName,"MAPspprtFootMod,"..grpName), objCost=objCost,baseStage=1}
		elseif mod==3 then
			stageParam[stage]={startSeg=1, endSeg=endSegW, nvar=2,setStageFunc="setStage_param", param=makeOptParamAxis(3,'y',"MAPswingFootMod,"..grpName,"MAPspprtFootMod,"..grpName), objCost=objCost,baseStage=1}
		end
	end
	--stageParam[stage+1]={baseStage=1, startSeg=1}
end
function  useCases.turn:genStageParamInitial()
	local stageParam={}
	self:updateStageParam(1, stageParam)
	return stageParam
end

useCases.turn.mapControlParam=function(graph, title, param)
	local out={}

	assert(string.sub(title, 1,4)=="map,")
	local tokens=string.tokenize(title,',')
	local idx=tonumber(tokens[2])
	local name=tokens[3]

	local convertMap=function(name, mirror)
		local FootIdx=string.find(name, "Foot")
		local key=string.sub(name, 1, FootIdx+3)
		local id=string.lower(string.sub(name, FootIdx+4, FootIdx+4))..string.sub(name, FootIdx+5)
		local convertMap
		if mirror then
			convertMap=
			{
				swingFoot={',footR', ',L'}, 
				spprtFoot={',footL', ',L'},
			}
		else
			convertMap=
			{
				swingFoot={',footL', ',R'}, 
				spprtFoot={',footR', ',R'},
			}
		end
		return {convertMap[key][1]..id..",", convertMap[key][2],}
	end

	local grp=tokens[4]
	local axis=tokens[5]
	local cmap=convertMap(name)
	local cmapm=convertMap(name,true)
	local name2='keyframe,'..idx..cmap[1]..grp..cmap[2]
	local name2_mirror='keyframe,'..idx..cmapm[1]..grp..cmapm[2]

	if axis~=nil then
		array.pushBack(out, {name2..","..axis,param}) 
		if axis=='x' then
			array.pushBack(out, {name2_mirror..","..axis,param*-1}) 
		else
			array.pushBack(out, {name2_mirror..","..axis,param}) 
		end
	else
		local param2=param:copy()
		array.pushBack(out, {name2, param2})
		param2.x=param2.x*-1
		array.pushBack(out, {name2_mirror, param2})
	end

	return out
end

useCases.turn.funcUpdateConstraints=function(graph)
	useCases.defaultFuncUpdateConstraints(useCase, graph)
end

useCases.turn.registerContactPair=function(model, loader, floor, simulator)

	param=vectorn ()
	param:setValues(0.5,0.5, model.penaltyForceStiffness, model.penaltyForceDamp)
	for i=1,loader:numBone()-1 do

		local bone_i=loader:VRMLbone(i)
		if string.find(bone_i:name(), "Foot")
			or string.find(bone_i:name(), "Toe") then
			simulator:registerCollisionCheckPair(loader:name(),bone_i.NameId, floor:name(), floor:bone(1):name(), param)
		end
	end
end


useCases.turn.init_globals=function()
	outputSuperSample=1
	PDservoLatency=5-- for debugging. set 5 for normal use.
	IDservoLatency=0
	COPlatency=10
	PredictionLatency=0
	disableTouchDownFeedback=false
	model.simulationFrameRate=120
	model.simulationSubTimesteps=1 -- has to be 1 for unknown reason
	model.penaltyForceStiffness=20000
	model.penaltyForceDamp=2000
	model.k_p_ID=250
	model.k_d_ID=25
	model.k_p_PD=200
	model.k_d_PD=15
	model.k_ID_torque_scale=1
	--model.k_p_PD=10
	--model.k_d_PD=5
	model.k_p_JTfoot=500
	model.k_d_JTfoot=50
	model.k_scale_active_pd.knee={0.5,0.5,1}
	model.k_scale_id.knee={1,1,1}
	model.k_scale_id.ankle={1,1,1}
	model.k_scale_id.toes={1,1,1}
	model.k_scale_id.shoulder={1,1,1}
	model.initialHeight=0.0
end

useCases.turn.segmentations=
{
	turn={
		firstFrames={1*4,2*40,37*4,43*4,48*4,62*4,80*4,98*4,115*4,132*4,149*4,168*4},
		--                 b  r    d   L   R    L   R   L   R    L
		names={          'stand','r','rl','l1', 'R1',  'L','R2','L2','R3'},
		swingL={            0,    1,  0  ,  0 ,   1 ,   0,  1,  0,   1  },
		swingR={            0,    0,  0  ,  1 ,   0 ,   1,  0,  1,   0  },
		footRefL= "convertFromSwingL",
		footRefR= "convertFromSwingR",
		usePositionControl=false,
	},
}
useCases.turn.graphParam={
	turn={
		seg={          'stand','r','rl','l1','R1','L', 'R',},
		num_key={         3,    3,  2,    3,  4  , 4,   4 , },
		key_first={       0,    0, 'r',   0,  0  , 0,   0 , },
		key_last={       'r', 'rl','l1','R1','L','R', 'L', },
	},
}
useCases.turn.graph={
	{
		"addInterpolatedSegment",
		grpName="turn",
		name="R",
		seg0={"turn", "R2"},
		seg1={"turn", "R1"},
		startWeight=0, endWeight=1
	},
	{"connectMulti", "turn", "stand", "r", "rl", "l1",'R1', 'L', 'R', 'L'},
	{"initialSegment", "turn", "stand"}
}
useCases.turn.segNames={
	"stand", "r", "rl", "l1",'R1','L','R'
}


do 
	useCases.turn.controlParam={
		['useCases,turn,COMobjWeight']=0, 
		['useCases,turn,EEobjWeight']=60000, 
		['useCases,turn,EEobjWeightAngular']=60000, 
		['useCases,turn,conservativeW']=1, 
		['useCases,turn,contactMargin']=0.01, 
		['useCases,turn,ddqObjWeight']=10000, 
		['useCases,turn,dotMomentumScale']=0.3, 
		['useCases,turn,excludeRoot']=true, 
		['useCases,turn,headControlWeight']=0, 
		['useCases,turn,k_d_HEAD']=14, 
		['useCases,turn,k_p_HEAD']=0, 
		['useCases,turn,k_d_EE']=24, 
		['useCases,turn,k_d_ID']=20, 
		['useCases,turn,k_d_momentum']=10, 
		['useCases,turn,k_p_EE']=120, 
		['useCases,turn,k_p_ID']=120, 
		['useCases,turn,lambdaObjWeight']=0.0001, 
		['useCases,turn,lambdaObjWeight2']=5, 
		['useCases,turn,maxPenetratingVel']=0, 
		['useCases,turn,momentumThr']=50, 
		['useCases,turn,momentumWeight']=8000, 
		['useCases,turn,noComvelDependentFootAdjustment']=true, 
		['useCases,turn,noIntersectionPrevenction']=true, 
		['useCases,turn,numericalDerivDmot']=true, 
		['useCases,turn,perClassContactMargin']=1, 
		['useCases,turn,tauObjWeight']=0.0001, 
		['useCases,turn,turnGain']=10, 
		['useCases,turn,velMarginOffset']=0, 
	}
	local function accumulate(cp_mod)
		local useCase=useCases.turn
		useCases.accumulate(useCase, cp_mod)
	end

	useCases.turn.noCOMjoint=true
	useCases.turn.spprtImpFromImp=true
accumulate({['keyframe,0,footLmod,turn,r,x']= -0.0039331735318658, ['keyframe,0,footLmod,turn,r,y']= 0.00029869417194006, ['keyframe,0,footLmod,turn,r,z']= -0.0012155981234709, ['keyframe,1,footLmod,turn,r,x']= -0.003466052993371, ['keyframe,1,footLmod,turn,r,y']= 0.0020873448676081, ['keyframe,1,footLmod,turn,r,z']= -0.00089919028331067, ['keyframe,0,footRmod,turn,r,x']= 0.003335439499997, ['keyframe,0,footRmod,turn,r,y']= -0.00046544173301394, ['keyframe,0,footRmod,turn,r,z']= -0.0018677612905925, ['keyframe,1,footRmod,turn,r,x']= -0.0023051883039452, ['keyframe,1,footRmod,turn,r,y']= -0.0029005257623769, ['keyframe,1,footRmod,turn,r,z']= -0.00068940604846545, })
accumulate({ ['keyframe,0,footLmod,turn,r,x']= -0.0044863908384157, ['keyframe,0,footLmod,turn,r,y']= 0.0006210311716366, ['keyframe,0,footLmod,turn,r,z']= 0.00028140543371242, ['keyframe,1,footLmod,turn,r,x']= -0.0040143667713307, ['keyframe,1,footLmod,turn,r,y']= 0.002569628167453, ['keyframe,1,footLmod,turn,r,z']= -0.00068766105493847, ['keyframe,0,footRmod,turn,r,x']= 0.0030177897003884, ['keyframe,0,footRmod,turn,r,y']= 0.00033029116414517, ['keyframe,0,footRmod,turn,r,z']= -0.0028777633325204, ['keyframe,1,footRmod,turn,r,x']= -0.003250000332353, ['keyframe,1,footRmod,turn,r,y']= -0.0028409731053291, ['keyframe,1,footRmod,turn,r,z']= -0.00096187138459395, })
accumulate({ ['map,0,swingFootMod,turn,x']= 0.0045193865502254, ['map,0,swingFootMod,turn,y']= -0.015842525829682, ['map,0,swingFootMod,turn,z']= 0.010661507160312, ['map,1,swingFootMod,turn,x']= 0.022744324298886, ['map,1,swingFootMod,turn,y']= 8.7268639636481e-05, ['map,1,swingFootMod,turn,z']= 0.042264912728011, ['map,2,swingFootMod,turn,x']= 0.0088975245378532, ['map,2,swingFootMod,turn,y']= -0.073304329682917, ['map,2,swingFootMod,turn,z']= 0.0061592122732748, ['map,0,spprtFootMod,turn,x']= 0.0043167369465753, ['map,0,spprtFootMod,turn,y']= -0.026127893281938, ['map,0,spprtFootMod,turn,z']= 0.01990261790268, ['map,1,spprtFootMod,turn,x']= -0.039684260692768, ['map,1,spprtFootMod,turn,y']= -0.010925909932512, ['map,1,spprtFootMod,turn,z']= 0.0079997715489314, ['map,2,spprtFootMod,turn,x']= -0.039392305962289, ['map,2,spprtFootMod,turn,y']= 0.058539843962959, ['map,2,spprtFootMod,turn,z']= 0.0055367921890708, })
useCases.unmapControlParam(useCases.turn)


		useCases.turn.optDotMomentum=false
		useCases.turn.useBulletColdet=false
		--useCases.turn.useTorqueConstraint=true
		useCases.turn.useTorqueConstraint=false
		useCases.turn.useEqualityVelConstraint=false
		--useCases.turn.useRotationalFriction=true
		useCases.turn.useRotationalFriction=false
		--useCases.turn.useContactCentroid =true
		useCases.turn.useContactCentroid =false
		useCases.turn.useSoftContactModel=true
		accumulate({['useCase,optDotMomentum']=false})
		accumulate({['useCase,useBulletColdet']=false})
		accumulate({['useCase,useTorqueConstraint']=true})
		accumulate({['useCase,useEqualityVelConstraint']=false})
		--accumulate({['useCase,useRotationalFriction']=true})
		accumulate({['useCase,useRotationalFriction']=false})
		accumulate({['useCase,useContactCentroid ']=true})
		accumulate({['useCase,useSoftContactModel']=true})
			accumulate({['useCase,contactMargin']=0.005})
			accumulate({['useCase,maxDepth']=0.01})
			accumulate({['useCase,minimizeMidSpprtContactForceY']=true})
			accumulate({
				['useCase,maxTorque']=4000,
				['useCase,lambdaObjWeight2']=0.5,
				['useCases,turn,k_p_ID']=220, 
				--['useCases,turn,desiredAccThr']=4000, 
			})
			accumulate({['useCase,QPservoDScaleCoef']=1})
			accumulate({['useCase,QPservoDDScaleCoef']=0})
			accumulate({['useCase,limbDScaleCoef']=0})

accumulate({ ['map,0,swingFootMod,turn,x']= 0.0071421235459786, ['map,0,swingFootMod,turn,y']= -0.02174211536856, ['map,0,swingFootMod,turn,z']= 0.011725296186233, ['map,1,swingFootMod,turn,x']= 0.024500975855049, ['map,1,swingFootMod,turn,y']= 0.00020081175035085, ['map,1,swingFootMod,turn,z']= 0.038600531969784, ['map,2,swingFootMod,turn,x']= 0.0085968585697409, ['map,2,swingFootMod,turn,y']= -0.07174367696738, ['map,2,swingFootMod,turn,z']= 0.0096645524557181, ['map,0,spprtFootMod,turn,x']= 0.0073420563223151, ['map,0,spprtFootMod,turn,y']= -0.027448529179236, ['map,0,spprtFootMod,turn,z']= 0.021943752285955, ['map,1,spprtFootMod,turn,x']= -0.036876063486176, ['map,1,spprtFootMod,turn,y']= -0.0086566057302739, ['map,1,spprtFootMod,turn,z']= 0.0042476385439491, ['map,2,spprtFootMod,turn,x']= -0.038412433632499, ['map,2,spprtFootMod,turn,y']= 0.062026023425986, ['map,2,spprtFootMod,turn,z']= 0.0048360733379793, })
useCases.unmapControlParam(useCases.turn)
		useCases.turn.useThreeDimTorque=true
useCases.turn.ddqObjWeight_flight=10000
useCases.turn.excludeRootFlight=true
accumulate({ ['map,0,swingFootMod,turn,x']= 0.013795522826417, ['map,0,swingFootMod,turn,y']= -0.014516741021222, ['map,0,swingFootMod,turn,z']= 0.0027568896791526, ['map,1,swingFootMod,turn,x']= 0.031643316246551, ['map,1,swingFootMod,turn,y']= 0.0017007799626016, ['map,1,swingFootMod,turn,z']= 0.023145266703512, ['map,2,swingFootMod,turn,x']= 0.0012671612432612, ['map,2,swingFootMod,turn,y']= -0.071018892521923, ['map,2,swingFootMod,turn,z']= -0.0051858408338439, ['map,0,spprtFootMod,turn,x']= 0.0023414760625779, ['map,0,spprtFootMod,turn,y']= -0.031850287295771, ['map,0,spprtFootMod,turn,z']= 0.040665163156667, ['map,1,spprtFootMod,turn,x']= -0.038473600960782, ['map,1,spprtFootMod,turn,y']= -0.018208417799327, ['map,1,spprtFootMod,turn,z']= 0.005102178796439, ['map,2,spprtFootMod,turn,x']= -0.05460916428427, ['map,2,spprtFootMod,turn,y']= 0.049040857572521, ['map,2,spprtFootMod,turn,z']= 0.020149886599569, })
useCases.unmapControlParam(useCases.turn)
accumulate({ ['map,0,swingFootMod,turn,x']= 0.0096633515911964, ['map,0,swingFootMod,turn,y']= -0.0094423252533049, ['map,0,swingFootMod,turn,z']= 0.0021275933844534, ['map,1,swingFootMod,turn,x']= 0.03070437211169, ['map,1,swingFootMod,turn,y']= 0.006702859165997, ['map,1,swingFootMod,turn,z']= 0.026446150672666, ['map,2,swingFootMod,turn,x']= 0.0008694137667502, ['map,2,swingFootMod,turn,y']= -0.070675327836193, ['map,2,swingFootMod,turn,z']= -0.0017860798797842, ['map,0,spprtFootMod,turn,x']= -0.0012760546191601, ['map,0,spprtFootMod,turn,y']= -0.036947951988172, ['map,0,spprtFootMod,turn,z']= 0.045491082072655, ['map,1,spprtFootMod,turn,x']= -0.031542241106176, ['map,1,spprtFootMod,turn,y']= -0.018375206295148, ['map,1,spprtFootMod,turn,z']= 0.0071770345422843, ['map,2,spprtFootMod,turn,x']= -0.056601889595584, ['map,2,spprtFootMod,turn,y']= 0.044423821892108, ['map,2,spprtFootMod,turn,z']= 0.022650958005192, })
useCases.unmapControlParam(useCases.turn)
			accumulate({['useCase,minimizeMidSpprtContactForceY']=false})
		useCases.turn.useSoftContactModel_old =true
			accumulate({['useCase,contactMargin']=0.01,
		['useCases,turn,lambdaObjWeight']=0.0001, 
		['useCases,turn,lambdaObjWeight2']=0.0001, 
		['useCase,maxAggLambda']= 		5000,
		})
		--useCases.turn.clampLambda=true
		useCases.turn.useThreeDimTorque=true
accumulate({ ['map,0,swingFootMod,turn,x']= 0.0027889980108694, ['map,0,swingFootMod,turn,y']= 0.0048425372551608, ['map,0,swingFootMod,turn,z']= 0.014540397524617, ['map,1,swingFootMod,turn,x']= 0.036241432291751, ['map,1,swingFootMod,turn,y']= 0.0075853431509952, ['map,1,swingFootMod,turn,z']= 0.034341282788252, ['map,2,swingFootMod,turn,x']= 0.0079403815513847, ['map,2,swingFootMod,turn,y']= -0.065567031443377, ['map,2,swingFootMod,turn,z']= -0.0031657495543421, ['map,0,spprtFootMod,turn,x']= -0.016066409745892, ['map,0,spprtFootMod,turn,y']= -0.058907928427061, ['map,0,spprtFootMod,turn,z']= 0.029601838233932, ['map,1,spprtFootMod,turn,x']= -0.033424213651341, ['map,1,spprtFootMod,turn,y']= -0.019939888850714, ['map,1,spprtFootMod,turn,z']= 0.0031412609913966, ['map,2,spprtFootMod,turn,x']= -0.074210521145991, ['map,2,spprtFootMod,turn,y']= 0.036710983090529, ['map,2,spprtFootMod,turn,z']= 0.022524526056001, })
accumulate({ ['map,0,swingFootMod,turn,z']= 0.013555537430123, ['map,1,swingFootMod,turn,z']= 0.034171852634761, ['map,2,swingFootMod,turn,z']= -0.003947434104739, ['map,0,spprtFootMod,turn,z']= 0.028082900529811, ['map,1,spprtFootMod,turn,z']= 0.0020181789014166, ['map,2,spprtFootMod,turn,z']= 0.02385925732034, })
useCases.unmapControlParam(useCases.turn)
accumulate({ ['map,0,swingFootMod,turn,x']= 0.17464163856123, ['map,0,swingFootMod,turn,y']= 0.034987835072571, ['map,0,swingFootMod,turn,z']= 0.036337140688583, ['map,1,swingFootMod,turn,x']= 0.11799865737557, ['map,1,swingFootMod,turn,y']= 0.0039511024441838, ['map,1,swingFootMod,turn,z']= 0.066010471252592, ['map,2,swingFootMod,turn,x']= -0.090013804423813, ['map,2,swingFootMod,turn,y']= -0.088791663840198, ['map,2,swingFootMod,turn,z']= 0.025736004806252, ['map,0,spprtFootMod,turn,x']= 0.047391565610889, ['map,0,spprtFootMod,turn,y']= -0.091687359603214, ['map,0,spprtFootMod,turn,z']= 0.04741890530354, ['map,1,spprtFootMod,turn,x']= -0.020620118984645, ['map,1,spprtFootMod,turn,y']= 0.030731538655523, ['map,1,spprtFootMod,turn,z']= 0.073295142355805, ['map,2,spprtFootMod,turn,x']= -0.099107864194126, ['map,2,spprtFootMod,turn,y']= 0.021312871594697, ['map,2,spprtFootMod,turn,z']= -0.0011599129900773, })
useCases.unmapControlParam(useCases.turn)
useCases.turn.invAccConeCoef=0.1
end
